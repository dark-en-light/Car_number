import java.util.Scanner;
// Класс "NumberInfo" отвечает за сканирование введённого номера машины, его проверку на соответствие формату федеральных номерных знаков,
// обработку и получение определённых данных из номера для выдачи информации.
// В классе реализованы методы такие как "getNumberInfo()", "getCodeGBDDFromNumber()" и "getSubjectOfTheRF()".
public class NumberInfo {
    Scanner scanner = new Scanner(System.in); //Объявление сканера для ввода с консоли новых значений.
    private boolean exit = false; //Поле для проверки вышел ли владелец счёта из аккаунта.
    private String answer; //Поле для хранения номера выбранной операции в программе.
    private String number; //Поле для хранения номера машины.
    private String digits; //Поле для хранения чисел из номера машины.
    private String codeGBDD; //Поле для хранения кода ГБДД.
    private String letters; //Поле для хранения нескольких символов из номера машины.

    // Метод "getNumberInfo()" реализует ту часть программы, где происходит взаимодействие с пользователем, сканирование введённого номера машины,
    // его сравнение с регулярными выражениями, соответствующими нескольким разным форматам федеральных номерных знаков и с регулярными выражениями,
    // соответствующими нескольким часто встречающимся ошибкам ввода (в целях подсказки пользователю почему номер не может быть проверен).
    public void getNumberInfo() {
        //Приветствие пользователя.
        System.out.println("Вас приветствует программа по поиску номеров!");

        //Вход в цикл с условием пока пользователь не решит выйти из программы.
        while (!exit) {
            //Предложение пользователю выбрать и ввести номер действия.
            System.out.println("Что бы вы хотели сделать?\n(Введите номер ответа)\n\n1. Получить информацию по номеру.\n2. Выйти из программы.");
            //Сканирование номера введённого действия.
            answer = scanner.nextLine();

            //Условие на содержание переменной "answer" строки "1".
            if (answer.equals("1")) {
                //Если условие выполняется, то предлагается ввести номер машины, и выводится информация по правилам его ввода.
                System.out.println("\nА сейчас вам нужно будет ввести номер машины.\nБуквы можно вводить как заглавные, так и строчные, но только одновременно\nприсутствующие в кириллице и в латинице (АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx)\nи отдельно латинские буквы (Dd).\n\nВ качестве образца ввода выберите один из следующих вариантов, только без скобок:\n\n(Y000YY77) (y000yy77) (y 000yy77) (Y 000 YY 77) (y 000 yy RUS 77) (y 000 yy rus 77)\n(yy 000 RUS 777) (YY0000 RUS 77) (000 CD 0 rus 77) (000 d 000rus77) (000T00077) (YY655Y 78)\n\nПожалуйста введите номер машины:");
                //Сканирование введённого номера машины
                number = scanner.nextLine();

                //Условие на соответствие введённого номера типу "Регистрационные знаки легковых, грузовых автомобилей и автобусов (кроме отнесённых к типу 1Б)."
                if (number.matches("[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?\\d{3}\\s?[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]{2}(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3}")) {
                    //Если условие выполняется, то вывод предварительной информации по номеру машины.
                    System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категориям: легковых, грузовых автомобилей и автобусов\n (кроме отнесённых к типу 1Б).");
                    //Передача номера машины методу для получения кода ГБДД и вывода информации по нему.
                    getCodeGBDDFromNumber(number);
                }

                //Условие на соответствие введённого номера типу "Регистрационные знаки для легковых такси, транспортных средств, оборудованных для перевозок более восьми человек".
                else if (number.matches("[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]{2}\\s?\\d{3}(\\s|(\\s?([Rr][Uu][Ss])\\s?))\\d{2,3}")) {
                    //Если условие выполняется, то вывод предварительной информации по номеру машины.
                    System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: легковых такси, транспортных средств,\n оборудованных для перевозок более восьми человек, осуществляющих перевозку\n на основании лицензии.");
                    //Передача номера машины методу для получения кода ГБДД и вывода информации по нему.
                    getCodeGBDDFromNumber(number);
                }

                //Условие на соответствие введённого номера типу "Регистрационные знаки для автомобильных прицепов и полуприцепов".
                else if (number.matches("[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]{2}\\s?\\d{4}(\\s|(\\s?([Rr][Uu][Ss])\\s?))\\d{2,3}")) {
                    //Если условие выполняется, то вывод предварительной информации по номеру машины.
                    System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: автомобильных прицепов и полуприцепов.\n");
                    //Передача номера машины методу для получения кода ГБДД и вывода информации по нему.
                    getCodeGBDDFromNumber(number);
                }

                //Условие на соответствие введённого номера номеру с шестью идущими подряд без разделения цифрами в конце.
                //Данное условие стало необходимым, потому что пользователь может ввести в конце номера 6 цифр подряд без разделения, из чего возникает вопрос
                //"Сколько из этих чисел относится к коду ГБДД?". В зависимости от этого номер и информация по нему будут отличаться.
                else if (number.matches("[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]{2}\\s?\\d{6}")) {
                    //Вывод информации о необходимости ввести код ГБДД отдельно.
                    System.out.println("\nПожалуйста, введите только код ГБДД от данного номера (без пробелов и других знаков разделения).");
                    //Сканирование введённого кода ГБДД.
                    codeGBDD = scanner.nextLine();

                    //Если длина переменной "codeGBDD" соответствует значению "3".
                    if (codeGBDD.length() == 3) {
                        //Если условие выполняется, то вывод предварительной информации по номеру машины.
                        System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: легковых такси, транспортных средств,\n оборудованных для перевозок более восьми человек, осуществляющих перевозку\n на основании лицензии.");
                        //Передача введённого кода ГБДД сразу методу выводящему информацию о регионе.
                        getSubjectOfTheRF(codeGBDD);
                    }

                    //Если длина переменной "codeGBDD" соответствует значению "2".
                    else if (codeGBDD.length() == 2) {
                        //Если условие выполняется, то вывод предварительной информации по номеру машины.
                        System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: автомобильных прицепов и полуприцепов.\n");
                        //Передача введённого кода ГБДД сразу методу выводящему информацию о регионе.
                        getSubjectOfTheRF(codeGBDD);
                    }

                    //Если длина переменной "codeGBDD" соответствует любому другому значению.
                    else {
                        //Вывод информации о том что такого номера нет.
                        System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nТакого кода ГБДД не существует. Пожалуйста уточните правильность номера и введите его заново.\n");
                    }
                }

                //Условие на соответствие введённого номера типу "транспортные средства, принадлежащие дипломатическим представительствам,
                //консульским учреждениям, в том числе возглавляемым почётными консульскими должностными лицами, международным (межгосударственным) организациям и их сотрудникам,
                //аккредитованным при Министерстве иностранных дел Российской Федерации".
                else if (number.matches("\\d{3}\\s?([DTdt]|[Cc][Dd])\\s?\\d{1,3}(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3}")) {
                    //Если условие выполняется, то вывод предварительной информации по номеру машины.
                    System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: транспортные средства, принадлежащие\n дипломатическим представительствам, консульским учреждениям,\n в том числе возглавляемым почётными консульскими должностными лицами,\n международным (межгосударственным) организациям и их сотрудникам,\n аккредитованным при Министерстве иностранных дел Российской Федерации.");
                    //Очистка переменной "letters".
                    letters = "";

                    //Цикл для выделения определённой части введённого номера для последующего предоставления более подробной информации по номеру.
                    for (int i = 0; i < 6; i++ ) {
                        //Запись в переменную "letters" символов под номером соответствующим значению "i".
                        letters += number.charAt(i);
                    }

                    //Условие на соответствие введённого номера номеру с содержанием сочетания букв "CD" не зависимо от их регистра.
                    if (letters.matches("\\d{3}\\s?[Cc][Dd]\\s?\\d{0,3}")) {
                        //Если условие выполняется, то вывод дополнительной информации по номеру машины.
                        System.out.println("\nCD — автомобиль с данным регистрационным знаком зарегистрирован на\n посла или иное лицо в ранге главы дипломатического представительства.");
                    }

                    //Условие на соответствие введённого номера номеру с содержанием буквы "D" не зависимо от её регистра.
                    else if (letters.matches("\\d{3}\\s?[Dd]\\s?\\d{0,3}")) {
                        //Если условие выполняется, то вывод дополнительной информации по номеру машины.
                        System.out.println("\nD — регистрационный знак выдан на автомобиль (мотоцикл), принадлежащий\n дипломатическому представительству, консульскому учреждению,\n международной организации или сотруднику такого представительства\n (учреждения, организации), обладающего дипломатическим статусом.");
                    }

                    //Условие на соответствие введённого номера номеру с содержанием буквы "Т" не зависимо от её регистра.
                    else if (letters.matches("\\d{3}\\s?[Tt]\\s?\\d{0,3}")) {
                        //Если условие выполняется, то вывод дополнительной информации по номеру машины.
                        System.out.println("\nT — регистрационный знак выдан на автомобиль (мотоцикл) сотрудника\n дипломатического представительства, консульского учреждения,\n международной организации, не обладающего дипломатическим статусом\n (административно-технический персонал).");
                    }

                    //Условие для исключения ошибку, когда в конце номера не менее трёх чисел идущих подряд без разделения,
                    //В таком случае может быть непонятно сколько цифр из конца номера относится к коду ГБДД.
                    if (number.matches("\\d{3}\\s?([DTdt]|[Cc][Dd])\\s?\\d{1,3}\\d{2,3}")) {
                        //Вывод информации о необходимости ввести код ГБДД отдельно.
                        System.out.println("\nПожалуйста, введите только код ГБДД от данного номера (без пробелов и других знаков разделения).");
                        //Сканирование введённого кода ГБДД.
                        codeGBDD = scanner.nextLine();
                        //Передача введённого кода ГБДД сразу методу выводящему информацию о регионе.
                        getSubjectOfTheRF(codeGBDD);
                    }

                    //Если условие выше не выполняется.
                    else {
                        //Передача номера машины методу для получения кода ГБДД и вывода информации по нему.
                        getCodeGBDDFromNumber(number);
                    }
                }

                //Условие на соответствие введённого номера типу "Для легковых, грузовых, грузопассажирских автомобилей, автобусов, автомобильных прицепов и полуприцепов".
                else if (number.matches("[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]{2}\\s?\\d{3}\\s?[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx](\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3}")) {
                    //Если условие выполняется, то вывод предварительной информации по номеру машины.
                    System.out.println("\nНомер: " + number + "\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nЭто регистрационный знак дорожного транспортного средства,\n относящийся к категории: легковых, грузовых, грузопассажирских\n автомобилей, автобусов, автомобильных прицепов и полуприцепов.");
                    //Передача номера машины методу для получения кода ГБДД и вывода информации по нему.
                    getCodeGBDDFromNumber(number);
                }

                //Условие для исключения ошибки, когда введённый номер содержит недопустимые буквы.
                else if (number.matches("(([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]|[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx])\\s?[0-9]{3}\\s?(([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx])|([АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]])|([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]))(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[0-9]{3}\\s?[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx]\\s?[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx](\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|(([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx])|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]])|([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]])\\s?[0-9]{3,4}(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|((([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx])|([АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]])|([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]))\\s?[0-9]{3}\\s?([А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]]|[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx])(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|([АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx]\\s?[АВЕКМНОРСТУХавекмнорстухABCEKMHOPYXabcekmhopyx]\\s?[0-9]{3}\\s?[А-Яа-яA-Za-z&&[^АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]](\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})")) {
                    //Если условие выполняется, то вывод информации об ошибке.
                    System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nВведённый номер: " + number + " - некорректный! Введены недопустимые буквы");
                }

                //Условие для исключения ошибки, когда введённый номер содержит много лишних пробелов. Это самое большое регулярное выражение из-за множества вариантов записи такого номера.
                //P.S. Не знаю правильно ли я поступила в этом случае нагромоздив эту регулярку, но я начала реализовывать этот вариант ошибки и мне хотелось довести её до рабочего состояния.
                else if (number.matches("([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s{2,}[0-9]\\s*[0-9]\\s*[0-9]\\s*([0-9]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s{2,}([0-9]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s{2,}([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s{2,}([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s{2,}[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]\\s{2,}[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]\\s{2,}[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]\\s{2,}(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?(\\s{2,}|\\s{2,}([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])?\\s{2,}|\\s{2,}([Rr][Uu][Ss])\\s{2,})[0-9]\\s*[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s{2,}[0-9]\\s*[0-9]?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s{2,}[0-9]?)|(\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?\\s+)|(\\s+[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s*[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?\\s*)|(\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s*[АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]?\\s*[0-9]\\s+[0-9]\\s*[0-9]\\s*[0-9]?\\s*([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?([АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s*)?[0-9]?\\s*[0-9]?\\s*[0-9]?\\s*(\\s*|\\s*([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s*|\\s*([Rr][Uu][Ss])\\s*)[0-9]\\s*[0-9]\\s*[0-9]?\\s*)")) {
                    //Если условие выполняется, то вывод информации об ошибке.
                    System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nУ данного номера: \"" + number + "\" - оооооочень много \"п ро б   е л  ов\". Это TOO MUCH!\nЗапишите пожалуйста как в одном из приведённых примеров.\nПробелы используются только для отделения чисел от букв и наоборот,\nи только не более одного пробела на одно разделение.\nМожно пробелы вообще не использовать, если вам так будет удобнее ;)");
                }

                //Условие для исключения ошибки, когда введённый номер не содержит достаточно цифр в регистрационном номере.
                else if (number.matches("([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?\\d{0,2}\\s?[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx][АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx][АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?\\d{0,2}\\s?[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]?\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})|(\\d{0,2}\\s?(([Cc][Dd])|[Tt]|[Dd])\\d{1,3}\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d{2,3})")) {
                    //Если условие выполняется, то вывод информации об ошибке.
                    System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nВведённый номер: " + number + " - некорректный!\nНе хватает цифр в регистрационном номере, здесь должно быть не менее\n3 цифр.");
                }

                //Условие для исключения ошибки, когда введённый номер не содержит достаточно цифр в коде ГБДД.
                else if (number.matches("([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?\\d{3}\\s?[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx][АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d?)|([АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx][АВЕКМНОРСТУХавекмнорстухABEKMHOPCTYXabekmhopctyx]\\s?\\d{3,4}\\s?[АВЕКМНОРСТУХавекмнорстухABDEKMHOPCTYXabdekmhopctyx]?\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d?)|(\\d{3}\\s?(([Cc][Dd])|[Tt]|[Dd])\\s?(\\s?|\\s?([Rr][Uu][Ss])?|([Rr][Uu][Ss])?\\s?|\\s([Rr][Uu][Ss])\\s)\\d?)")) {
                    //Если условие выполняется, то вывод информации об ошибке.
                    System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nВведённый номер: " + number + " - некорректный!\nНе хватает цифр в коде региона регистрации, здесь должно быть не менее\n2 цифр.");
                }

                //Если номер не соответствует ни одному регулярному выражению, но с ним что-то не так.
                //Сделано чтобы программа не вылетела просто так.
                else {
                    //Вывод информации об ошибке.
                    System.out.println("\n*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\nВведённый номер: " + number + " - некорректный! Запишите заново.");
                }
                //Вывод оформления для информации по номеру или ошибке (создано для выделения информации для удобства и читаемости).
                System.out.println("*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*\n");
            }

            //Условие на содержание в переменной "answer" строки "2".
            else if (answer.equals("2")) {
                //Вывод информации о выходе из программы.
                System.out.println("*Вы вышли из программы*");
                //Переменной "exit" присваивается значение "true", после чего условие на вход в цикл перестанет выполняться.
                exit = true;
            }

            //Если переменная "answer" содержит любую другую строку.
            else {
                //Вывод информации.
                System.out.println("\nТакого варианта ответа нет.\n");
            }
        }
    }

    // Метод "getCodeGBDDFromNumber()" принимает введённый номер машины и реализует ту часть программы, где происходит выделение из номера машины кода ГБДД и передача его методу "getSubjectOfTheRF()".
    private void getCodeGBDDFromNumber(String number) {
        //Очистка переменной "digits".
        digits = "";
        //Объявление переменной "i" и запись в неё длины переменной "number" меньшей на 1, потому что отсчёт идёт от нуля.
        int i = number.length()-1;
        //Цикл с условием "Пока i-ый символ в переменной "number" числовой".
        //В данном цикле символы переменной проверяются справа налево, потому что код ГБДД находится в самом конце номера.
        while (Character.isDigit(number.charAt(i))){
            //Запись цифр в переменную "digits" идёт в обратной последовательности для восстановления правильного порядка после перебора в цикле.
            digits = number.charAt(i) + digits;
            //Уменьшение значения "i", для проверки следующего значения переменной "number".
            i--;
        }
        //Очистка переменной "codeGBDD".
        codeGBDD = "";

        //Так как может возникнуть ситуация, когда между цифрами кода ГБДД и цифрами регистрационного номера может не быть разделения
        //то специально для этого реализована следующая конструкция которая в зависимости от длины переменной "digits" выполняет следующие операции.
        switch (digits.length()) {

            case 2: //Если длина переменной "digits" равна "2".
            case 3: //Если длина переменной "digits" равна "3".
                //В данном случае значения передаются полностью, потому что код ГБДД может содержать 2 или 3 значения.
                codeGBDD = digits;
                break;

            case 5: //Если длина переменной "digits" равна "5".
                //Объявление цикла для записи цифр из переменной "digits" в переменную "codeGBDD" справа налево, потому что код ГБДД в самом конце строки.
                //В данном случае записываются только первые 2 значения, потому что длина регистрационного номера, не может быть меньше 3.
                for (i = 4; i > 2; i--) {
                    //Запись цифр в переменную "codeGBDD" идёт в обратной последовательности для восстановления правильного порядка после перебора в цикле.
                    codeGBDD = digits.charAt(i) + codeGBDD;
                }
                break;

            case 7: //Если длина переменной "digits" равна "7".
                //Объявление цикла для записи цифр из переменной "digits" в переменную "codeGBDD" справа налево, потому что код ГБДД в самом конце строки.
                //В данном случае записываются только первые 3 значения, потому что длина регистрационного номера, не может быть больше 4.
                for (i = 6; i > 3; i--) {
                    //Запись цифр в переменную "codeGBDD" идёт в обратной последовательности для восстановления правильного порядка после перебора в цикле.
                    codeGBDD = digits.charAt(i) + codeGBDD;
                }
                break;
        }
        //Передача переменной "codeGBDD" методу "getSubjectOfTheRF()", для вывода информации по коду ГБДД.
        getSubjectOfTheRF(codeGBDD);
    }

    // Метод "getSubjectOfTheRF()" принимает переменную "codeGBDD" проверяет её значение на соответствие с
    // перечисленными значениями в конструкции "Switch {case:}" и выводит информацию по коду ГБДД.
    private void getSubjectOfTheRF(String codeGBDD) {
        System.out.println();
        System.out.print(codeGBDD + " - ");
        switch (codeGBDD) {
            case "77":
            case "97":
            case "99":
            case "177":
            case "199":
            case "197":
            case "777":
            case "797":
            case "799":
                System.out.println("код ГИБДД соответствует субъекту город Москва");
                break;
            case "02":
            case "102":
            case "702":
                System.out.println("код ГИБДД соответствует субъекту республика Башкортостан");
                break;
            case "23":
            case "93":
            case "123":
            case "193":
                System.out.println("код ГИБДД соответствует субъекту Краснодарский край");
                break;
            case "30":
                System.out.println("код ГИБДД соответствует субъекту Астраханская область");
                break;
            case "50":
            case "90":
            case "150":
            case "190":
            case "750":
            case "790":
                System.out.println("код ГИБДД соответствует субъекту Московская область");
                break;
            case "61":
            case "161":
            case "761":
                System.out.println("код ГИБДД соответствует субъекту Ростовская область");
                break;
            case "63":
            case "163":
            case "763":
                System.out.println("код ГИБДД соответствует субъекту Самарская область");
                break;
            case "66":
            case "96":
            case "196":
                System.out.println("код ГИБДД соответствует субъекту Свердловская область");
                break;
            case "78":
            case "98":
            case "178":
            case "198":
                System.out.println("код ГИБДД соответствует субъекту г. Санкт-Петербург");
                break;
            case "82":
                System.out.println("код ГИБДД соответствует субъекту Республика Крым");
                break;
            case "24":
            case "84":
            case "88":
            case "124":
                System.out.println("код ГИБДД соответствует субъекту Красноярский край\n (включая индексы бывших Таймырского и Эвенкийского автономных округов)");
                break;
            case "26":
            case "126":
                System.out.println("код ГИБДД соответствует субъекту Ставропольский край");
                break;
            default:
                System.out.println("для данного кода обозначения нет, либо он ещё не занесён в реестр.");
                break;
        }
    }
}

